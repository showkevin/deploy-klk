{"version":3,"sources":["assets/jss/material-kit-pro-react/views/blogPostSections/sectionCommentsStyle.js","assets/jss/material-kit-pro-react/components/mediaStyle.js","components/Media/Media.js","assets/img/faces/marc.jpg","Util/locationUtil.js","components/Chat/ChatMessage.jsx","assets/img/maps-social-share.png","components/Chat/ChatInput.jsx","const/common.js","Util/chatUtil.js","assets/img/faces/gloria2.jpg","assets/img/faces/jerry.jpg","components/Location/UserLocation.jsx","pages/ChatPage/UserChatPage.jsx"],"names":["sectionCommentsStyle","tooltipsStyle","section","backgroundposition","backgroundSize","padding","title","marginBottom","textAlign","footerButtons","float","footerIcons","width","height","position","display","top","marginTop","marginRight","verticalAlign","color555","color","grayColor","mediaStyle","media","WebkitBoxAlign","alignItems","fontSize","lineHeight","paddingRight","mediaLink","mediaAvatar","margin","overflow","borderRadius","boxShadow","hexToRgb","blackColor","mediaBody","WebkitBoxFlex","flex","mediaHeading","fontFamily","mediaFooter","content","clear","useStyles","makeStyles","styles","Media","props","avatarLink","avatar","avatarAlt","body","footer","innerMedias","rest","classes","className","href","src","alt","undefined","map","prop","defaultProps","module","exports","lastUpdateTime","currentLocation","setUserLocation","setErrorMessage","setAllowPGS","window","navigator","geolocation","getCurrentPosition","location","lat","coords","latitude","lng","longitude","error","0","1","2","3","code","enableHighAccuracy","timeout","maximumAge","watchCurrentLocation","userLocationCacheInterval","Date","watchPosition","now","Math","abs","clearWatchPosition","id","clearWatch","componentDecorator","text","key","indexOf","target","style","cardSize","showGraphic","header","description","maxLine","minLine","url","result","isGoogleMap","defaultMedia","maps","ChatMessage","message","event","useState","pressTime","setPressTime","intervalObject","setIntervalObject","messagefontSize","useSelector","state","login","useEffect","console","log","chatFontSize","wordBreak","onMouseDown","_pressTime","t","setInterval","onMouseUp","clearInterval","ChatInput","value","onChange","onReply","onUpdate","enableUpdate","onNotify","enableNotify","enableImageUpload","setReplyImageUrl","inputEl","useRef","imageAsFile","setImageAsFile","imageInput","setImageInput","formControlProps","fullWidth","inputProps","multiline","rows","disabled","placeholder","onClick","e","imageRef","ref","name","put","on","snapShot","err","child","getDownloadURL","then","fireBaseUrl","justIcon","round","type","image","files","imageFile","preventDefault","current","click","getMessageTimeNotify","utc","localDate","localHr","switchNumber","getHours","localMin","getMinutes","min","parseInt","hr","toDateString","num","toString","length","avatarUser","arg","linda","gloria","carlos","jerry","marc","mediaTitle","user","createOn","withRouter","history","ip","setIp","userLocation","errorMessage","allowPGS","fetch","response","split","ipInfo","sendTelegramMessage","allChatMessageInfo","setAllChatMessageInfo","replyMessage","setReplyMessage","replyImageUrl","isUserLocation","setIsUserLocation","maxMessageNumber","chat","chatMsgRef","limitToLast","snapshot","messageUpdate","messageInfo","push","set","setTimeout","data","val","sliceData","_","slice","values","currentSendMsgUser","GridContainer","justify","GridItem","xs","sm","md","index","number","reduxDispatch","chatTypes"],"mappings":"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","file":"static/js/13.6136738b.chunk.js","sourcesContent":["import { grayColor, title } from \"assets/jss/material-kit-pro-react.js\";\r\n\r\nimport tooltipsStyle from \"assets/jss/material-kit-pro-react/tooltipsStyle.js\";\r\n\r\nconst sectionCommentsStyle = {\r\n  ...tooltipsStyle,\r\n  section: {\r\n    backgroundposition: \"50%\",\r\n    backgroundSize: \"cover\",\r\n    padding: \"70px 0\"\r\n  },\r\n  title: {\r\n    ...title,\r\n    marginBottom: \"30px\",\r\n    textAlign: \"center\"\r\n  },\r\n  footerButtons: {\r\n    float: \"right\"\r\n  },\r\n  footerIcons: {\r\n    width: \"1.1rem\",\r\n    height: \"1.1rem\",\r\n    position: \"relative\",\r\n    display: \"inline-block\",\r\n    top: \"0\",\r\n    marginTop: \"-1em\",\r\n    marginBottom: \"-1em\",\r\n    marginRight: \"3px\",\r\n    verticalAlign: \"middle\"\r\n  },\r\n  color555: {\r\n    \"&,& *\": {\r\n      color: grayColor[15] + \" !important\"\r\n    }\r\n  }\r\n};\r\n\r\nexport default sectionCommentsStyle;\r\n","import {\r\n  title,\r\n  blackColor,\r\n  grayColor,\r\n  hexToRgb\r\n} from \"assets/jss/material-kit-pro-react.js\";\r\n\r\nconst mediaStyle = {\r\n  media: {\r\n    display: \"flex\",\r\n    WebkitBoxAlign: \"start\",\r\n    alignItems: \"flex-start\",\r\n    \"& p\": {\r\n      color: grayColor[0],\r\n      fontSize: \"1rem\",\r\n      lineHeight: \"1.6em\"\r\n    },\r\n    \"& $media $mediaBody\": {\r\n      paddingRight: \"0px\"\r\n    }\r\n  },\r\n  mediaLink: {\r\n    padding: \"10px\",\r\n    float: \"left !important\"\r\n  },\r\n  mediaAvatar: {\r\n    margin: \"0 auto\",\r\n    width: \"64px\",\r\n    height: \"64px\",\r\n    overflow: \"hidden\",\r\n    borderRadius: \"50%\",\r\n    marginRight: \"15px\",\r\n    boxShadow:\r\n      \"0 6px 10px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.14), 0 1px 18px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.12), 0 3px 5px -1px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.2)\",\r\n    \"& img\": {\r\n      width: \"100%\"\r\n    }\r\n  },\r\n  mediaBody: {\r\n    paddingRight: \"10px\",\r\n    WebkitBoxFlex: \"1\",\r\n    flex: \"1\"\r\n  },\r\n  mediaHeading: {\r\n    ...title,\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n    \"& small\": {\r\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\r\n    }\r\n  },\r\n  mediaFooter: {\r\n    \"& button, & a\": {\r\n      marginBottom: \"20px\"\r\n    },\r\n    \"&:after\": {\r\n      display: \"table\",\r\n      content: '\" \"',\r\n      clear: \"both\"\r\n    }\r\n  }\r\n};\r\n\r\nexport default mediaStyle;\r\n","import React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n// core components\r\n\r\nimport styles from \"assets/jss/material-kit-pro-react/components/mediaStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Media(props) {\r\n  const {\r\n    avatarLink,\r\n    avatar,\r\n    avatarAlt,\r\n    title,\r\n    body,\r\n    footer,\r\n    innerMedias,\r\n    ...rest\r\n  } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <div {...rest} className={classes.media}>\r\n      <a href={avatarLink} className={classes.mediaLink}>\r\n        <div className={classes.mediaAvatar}>\r\n          <img src={avatar} alt={avatarAlt} />\r\n        </div>\r\n      </a>\r\n      <div className={classes.mediaBody}>\r\n        {title !== undefined ? (\r\n          <h4 className={classes.mediaHeading}>{title}</h4>\r\n        ) : null}\r\n        {body}\r\n        <div className={classes.mediaFooter}>{footer}</div>\r\n        {innerMedias !== undefined\r\n          ? innerMedias.map(prop => {\r\n              return prop;\r\n            })\r\n          : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMedia.defaultProps = {\r\n  avatarLink: \"#pablo\",\r\n  avatarAlt: \"...\"\r\n};\r\n\r\nMedia.propTypes = {\r\n  avatarLink: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  avatarAlt: PropTypes.string,\r\n  title: PropTypes.node,\r\n  body: PropTypes.node,\r\n  footer: PropTypes.node,\r\n  innerMedias: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/marc.101b9dc3.jpg\";","import { userLocationCacheInterval } from \"const/common\";\r\n\r\nlet lastUpdateTime;\r\n\r\nconst currentLocation = (setUserLocation, setErrorMessage, setAllowPGS) => {\r\n    if (window.navigator.geolocation !== undefined) {\r\n\r\n        const success = (position) => {\r\n            const location = {\r\n                lat: position.coords.latitude ? position.coords.latitude : undefined,\r\n                lng: position.coords.longitude ? position.coords.longitude : undefined,\r\n            }\r\n\r\n            if (process.env.NODE_ENV === \"development\") {\r\n                console.log(\"getCurrentPosition:\");\r\n                console.log(location);\r\n            }\r\n\r\n            setUserLocation(location);\r\n            setAllowPGS(true);\r\n        }\r\n\r\n        const error = (error) => {\r\n\r\n            const errorTypes = {\r\n                0: \"不明原因錯誤\",\r\n                1: \"使用者拒絕提供位置資訊\",\r\n                2: \"無法取得位置資訊\",\r\n                3: \"位置查詢逾時\"\r\n            };\r\n\r\n            setErrorMessage(errorTypes[error.code])\r\n            setAllowPGS(false);\r\n        }\r\n\r\n        const optoptions = {\r\n            enableHighAccuracy: true,\r\n            timeout: 5000,\r\n            maximumAge: 0\r\n        };\r\n\r\n        window.navigator.geolocation.getCurrentPosition(success, error, optoptions);\r\n    }\r\n}\r\n\r\nconst watchCurrentLocation = (setUserLocation, setErrorMessage, setAllowPGS) => {\r\n    const success = (position) => {\r\n        const location = {\r\n            lat: position.coords.latitude ? position.coords.latitude : undefined,\r\n            lng: position.coords.longitude ? position.coords.longitude : undefined,\r\n        }\r\n\r\n        const now = new Date();\r\n        var duration = Math.abs(now - lastUpdateTime) / 1000;\r\n        const durationSeconds = duration % 60;\r\n        const updateSecondLimitation = 180; //3 分鐘通知一次\r\n\r\n        let allowUpdate = durationSeconds > updateSecondLimitation ? true : false;\r\n\r\n        if (allowUpdate) {\r\n            setUserLocation(location);\r\n            lastUpdateTime = new Date();\r\n        }\r\n\r\n        if (process.env.NODE_ENV === \"development\") {\r\n            console.log(\"watchPosition:\");\r\n            console.log(location);\r\n        }\r\n\r\n        setAllowPGS(true);\r\n    }\r\n\r\n    const error = (error) => {\r\n\r\n        const errorTypes = {\r\n            0: \"不明原因錯誤\",\r\n            1: \"使用者拒絕提供位置資訊\",\r\n            2: \"無法取得位置資訊\",\r\n            3: \"位置查詢逾時\"\r\n        };\r\n\r\n        setErrorMessage(errorTypes[error.code])\r\n        setAllowPGS(false);\r\n    }\r\n\r\n    const cacheInterval = userLocationCacheInterval;\r\n\r\n    const options = {\r\n        enableHighAccuracy: true,\r\n        timeout: 5000,\r\n        maximumAge: 0, //default : 0\r\n        // maximumAge: cacheInterval,\r\n    };\r\n\r\n    lastUpdateTime = lastUpdateTime ? lastUpdateTime : new Date();\r\n\r\n    if (window.navigator.geolocation !== undefined) {\r\n        const id = navigator.geolocation.watchPosition(success, error, options);\r\n        return id;\r\n    }\r\n}\r\n\r\nconst clearWatchPosition = (id) => {\r\n    if (window.navigator.geolocation !== undefined) {\r\n        navigator.geolocation.clearWatch(id);\r\n    }\r\n}\r\n\r\nexport { currentLocation, watchCurrentLocation, clearWatchPosition, lastUpdateTime };","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Media from \"components/Media/Media\";\r\nimport Linkify from \"react-linkify\";\r\nimport { ReactTinyLink } from 'react-tiny-link'\r\nimport \"../../assets/css/react-tiny-link-style.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport maps from '../../assets/img/maps-social-share.png';\r\n\r\nconst ChatMessage = ({ avatar, title, message, id, event }) => {\r\n\r\n    const [pressTime, setPressTime] = useState(0);\r\n    const [intervalObject, setIntervalObject] = useState(undefined);\r\n    const { messagefontSize } = useSelector(state => state.login);\r\n\r\n    useEffect(() => {\r\n        if (event) {\r\n            event();\r\n        }\r\n    }, [event])\r\n\r\n    useEffect(() => {\r\n        if (pressTime >= 2) {\r\n            console.log(\"long press\");\r\n            if (event) {\r\n                event(id, intervalObject);\r\n            } else {\r\n                console.log(\"event not exist\");\r\n            }\r\n        }\r\n    }, [pressTime])\r\n\r\n    const mouseDown = () => {\r\n        console.log(\"on Mouse Down\");\r\n        let _pressTime = 0\r\n        const t = setInterval(() => {\r\n            _pressTime = _pressTime + 1;\r\n            console.log(_pressTime);\r\n            setPressTime(_pressTime);\r\n        }, 1000);\r\n        setIntervalObject(t);\r\n        return false;\r\n    }\r\n\r\n    const mouseUp = () => {\r\n        console.log(\"on Mouse Up\");\r\n        clearInterval(intervalObject);\r\n        setPressTime(0);\r\n        return false;\r\n    }\r\n\r\n    const chatFontSize = {\r\n        fontSize: messagefontSize ? messagefontSize : \"0.7rem\",\r\n        wordBreak: \"break-word\",\r\n    }\r\n\r\n    return (\r\n        <Media\r\n            avatar={avatar}\r\n            title={\r\n                <span style={chatFontSize}>\r\n                    {title}\r\n                </span>\r\n            }\r\n            body={\r\n                <span>\r\n                    <p style={chatFontSize} onMouseDown={mouseDown} onMouseUp={mouseUp}>\r\n                        <Linkify componentDecorator={componentDecorator}>\r\n                            {message}\r\n                        </Linkify>\r\n                    </p>\r\n                </span>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nconst componentDecorator = (href, text, key) => {\r\n\r\n    const isGoogleMap = (href) => {\r\n        let result = false;\r\n        if (href.indexOf('goo.gl/maps') !== -1) {\r\n            result = true;\r\n        }\r\n\r\n        if (href.indexOf('maps.app.goo.gl') !== -1) {\r\n            result = true;\r\n        }\r\n\r\n        if (href.indexOf('www.google.com/maps') !== -1) {\r\n            result = true;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    const renderLink = () => {\r\n        if (href && href !== \"\") {\r\n            const check = href.indexOf('firebasestorage');\r\n            if (check !== -1) {\r\n                return (<></>)\r\n            } else {\r\n                return (\r\n                    <a href={href} key={key} target=\"_blank\" >\r\n                        {text}\r\n                    </a>\r\n                )\r\n            }\r\n        } else {\r\n            return (<></>)\r\n        }\r\n    }\r\n\r\n    const renderLinkContent = () => {\r\n        if (href && href !== \"\") {\r\n            const check = href.indexOf('firebasestorage');\r\n            if (check !== -1) {\r\n                return (\r\n                    <div style={{ fontSize: \"12px\", margin: \"10px 0px\" }}>\r\n                        <ReactTinyLink\r\n                            cardSize=\"large\"\r\n                            showGraphic={true}\r\n                            header={\"images\"}\r\n                            description={\" \"}\r\n                            maxLine={1}\r\n                            minLine={1}\r\n                            url={href}\r\n                        />\r\n                    </div>\r\n                )\r\n            } else {\r\n                if (!isGoogleMap(href)) {\r\n                    return (\r\n                        <div style={{ fontSize: \"12px\", margin: \"10px 0px\" }}>\r\n                            <ReactTinyLink\r\n                                cardSize=\"large\"\r\n                                showGraphic={true}\r\n                                maxLine={2}\r\n                                minLine={1}\r\n                                url={href}\r\n                            />\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <>\r\n                            <div style={{ fontSize: \"12px\", margin: \"10px 0px\" }}>\r\n                                <ReactTinyLink\r\n                                    cardSize=\"large\"\r\n                                    showGraphic={true}\r\n                                    url={href}\r\n                                    maxLine={2}\r\n                                    minLine={1}\r\n                                    defaultMedia={maps}\r\n                                    header=\"Google Maps\"\r\n                                    description={href}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n            }\r\n        } else {\r\n            return (<></>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {renderLink()}\r\n            {renderLinkContent()}\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nconst PreviewMe = () => {\r\n    return (<Fragment></Fragment>)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default ChatMessage;","module.exports = __webpack_public_path__ + \"static/media/maps-social-share.f529606d.png\";","import React, { Fragment, useState, useRef } from \"react\";\r\nimport Media from \"components/Media/Media\";\r\nimport Button from 'components/CustomButtons/Button.js';\r\nimport CustomInput from \"components/CustomInput/CustomInput\";\r\nimport Reply from \"@material-ui/icons/Reply\";\r\nimport { Icon, makeStyles, Input } from \"@material-ui/core\";\r\nimport sectionCommentsStyle from \"assets/jss/material-kit-pro-react/views/blogPostSections/sectionCommentsStyle.js\";\r\nimport { imageRef } from \"firebaseUtil/firebase\";\r\n\r\nconst useStyles = makeStyles(sectionCommentsStyle);\r\n\r\nconst ChatInput = ({\r\n    avatar, value, onChange, onReply,\r\n    onUpdate, enableUpdate, onNotify, enableNotify,\r\n    enableImageUpload, setReplyImageUrl\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    const inputEl = useRef(null);\r\n    const [imageAsFile, setImageAsFile] = useState(undefined);\r\n    const [imageInput, setImageInput] = useState(\"\");\r\n\r\n    const onImageClick = e => {\r\n        e.preventDefault();\r\n        inputEl.current.click();\r\n    }\r\n\r\n    const onImageChange = e => {\r\n        const image = e.target.files[0];\r\n        setImageAsFile(imageFile => (image));\r\n        setImageInput(`${image.name}`);\r\n    }\r\n\r\n    const onImageUpload = e => {\r\n\r\n        setImageInput(\"Image upload...\");\r\n\r\n        const uploadTask = imageRef.ref(`/images/${imageAsFile.name}`).put(imageAsFile);\r\n\r\n        uploadTask.on('state_changed', (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot)\r\n        }, (err) => {\r\n            //catches the errors\r\n            console.log(err)\r\n            setImageAsFile(undefined);\r\n        }, () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            imageRef.ref('images').child(imageAsFile.name).getDownloadURL()\r\n                .then(fireBaseUrl => {\r\n                    // setReplyImageUrl(prevObject => ({ ...prevObject, imgUrl: fireBaseUrl }))\r\n                    setReplyImageUrl(fireBaseUrl);\r\n                    console.log(fireBaseUrl);\r\n                })\r\n            setImageAsFile(undefined);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Media\r\n                avatar={avatar}\r\n                body={\r\n                    imageAsFile ? (\r\n                        <CustomInput\r\n                            id=\"reply\"\r\n                            formControlProps={{\r\n                                fullWidth: true\r\n                            }}\r\n                            inputProps={{\r\n                                multiline: true,\r\n                                rows: 1,\r\n                                value: imageInput,\r\n                                disabled: true,\r\n                            }}\r\n                        />\r\n                    ) : (\r\n                            <CustomInput\r\n                                id=\"reply\"\r\n                                formControlProps={{\r\n                                    fullWidth: true\r\n                                }}\r\n                                inputProps={{\r\n                                    multiline: true,\r\n                                    rows: 4,\r\n                                    placeholder: \" Write some nice stuff or nothing...\",\r\n                                    onChange: onChange,\r\n                                    value: value,\r\n                                }}\r\n                            />\r\n                        )\r\n                }\r\n                footer={\r\n                    <div>\r\n                        <Button\r\n                            color=\"github\"\r\n                            className={classes.footerButtons}\r\n                            onClick={imageAsFile ? onImageUpload : onReply}\r\n                        >\r\n                            <Reply /> Reply\r\n                        </Button>\r\n                        {enableUpdate ? (\r\n                            <Fragment>\r\n                                <div style={{ float: \"right\" }}>\r\n                                    <div style={{ width: \"5px\", height: \"41px\" }} ></div>\r\n                                </div>\r\n                                <Button\r\n                                    className={classes.footerButtons}\r\n                                    justIcon round color=\"github\"\r\n                                    onClick={onUpdate}>\r\n                                    <Icon>update</Icon>\r\n                                </Button>\r\n                            </Fragment>\r\n                        ) : <></>}\r\n                        {enableImageUpload ? (\r\n                            <Fragment>\r\n                                <div style={{ float: \"right\" }}>\r\n                                    <div style={{ width: \"5px\", height: \"41px\" }} ></div>\r\n                                </div>\r\n                                <input type=\"file\" style={{ display: \"none\" }} ref={inputEl} onChange={onImageChange} />\r\n                                <Button\r\n                                    className={classes.footerButtons}\r\n                                    justIcon round color=\"github\"\r\n                                    onClick={onImageClick}>\r\n                                    <Icon>insert_photo</Icon>\r\n                                </Button>\r\n                            </Fragment>\r\n                        ) : <></>}\r\n                        {enableNotify ? (\r\n                            <Fragment>\r\n                                <div style={{ float: \"right\" }}>\r\n                                    <div style={{ width: \"5px\", height: \"41px\" }} ></div>\r\n                                </div>\r\n                                <Button\r\n                                    className={classes.footerButtons}\r\n                                    justIcon round color=\"github\"\r\n                                    onClick={onNotify}>\r\n                                    <Icon>ring_volume</Icon>\r\n                                </Button>\r\n                            </Fragment>\r\n                        ) : <></>}\r\n\r\n\r\n                    </div>\r\n                }\r\n            />\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default ChatInput;","export const userLocationCacheInterval = 180000;","import React from 'react';\r\nimport { carlos, linda } from \"firebaseUtil/user\";\r\nimport marc from \"assets/img/faces/marc.jpg\";\r\nimport gloria from \"assets/img/faces/gloria2.jpg\";\r\nimport jerry from \"assets/img/faces/jerry.jpg\";\r\n\r\nconst chatFontSize = {\r\n    fontSize: '0.7rem'\r\n}\r\n\r\nconst getMessageTimeNotify = (utc) => {\r\n    const localDate = new Date(utc);\r\n    const localHr = switchNumber(localDate.getHours());\r\n    const localMin = switchNumber(localDate.getMinutes());\r\n\r\n    const current = Date.now();\r\n    const diffUtc = parseInt(current - utc, 10);\r\n    const min = (diffUtc / 1000) / 60;\r\n    const hr = min / 60;\r\n    const day = hr / 24;\r\n\r\n    if (min <= 60) {\r\n        // return `${Math.floor(min)} minutes ago`;\r\n        return `${localHr}:${localMin}`;\r\n    } else if (min > 60 && hr <= 24) {\r\n        // return `${Math.floor(hr)} hours ago`;\r\n        // return `${localHr}:${localMin}`;\r\n        return `${localHr}:${localMin} ----- ${localDate.toDateString()}`;\r\n    } else if (hr > 24) {\r\n        // return `${Math.floor(day)} days ago`;\r\n        return `${localHr}:${localMin} ----- ${localDate.toDateString()}`;\r\n    }\r\n\r\n    return min;\r\n}\r\n\r\nconst switchNumber = (num) => {\r\n    const value = num.toString();\r\n    if (value.length === 1) {\r\n        return `0${value}`;\r\n    } else {\r\n        return value;\r\n    }\r\n}\r\n\r\nconst avatarUser = (arg) => {\r\n    if (arg === linda) {\r\n        return gloria;\r\n    } else if (arg === carlos) {\r\n        return jerry;\r\n    } else {\r\n        return marc;\r\n    }\r\n}\r\n\r\nconst mediaTitle = (value) => {\r\n    if (value.user === linda) {\r\n        return (\r\n            <span style={chatFontSize}>\r\n                Karen <small>· {getMessageTimeNotify(value.createOn)} </small>\r\n            </span>\r\n        );\r\n    } else if (value.user === carlos) {\r\n        return (\r\n            <span style={chatFontSize}>\r\n                Kevin <small>· {getMessageTimeNotify(value.createOn)}</small>\r\n            </span>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nexport { mediaTitle, avatarUser }","module.exports = __webpack_public_path__ + \"static/media/gloria2.666943cf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jerry.2aa27bf0.jpg\";","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { sendTelegramMessage } from \"Util/TelegramUtil\";\r\nimport { watchCurrentLocation } from \"Util/locationUtil\";\r\nimport { clearWatchPosition } from \"Util/locationUtil\";\r\nimport { currentLocation } from \"Util/locationUtil\";\r\nimport * as paths from \"routes/constUrl\";\r\n\r\nconst UserLocation = ({ history }) => {\r\n    const [ip, setIp] = useState(undefined);\r\n    const [userLocation, setUserLocation] = useState(undefined);\r\n    const [errorMessage, setErrorMessage] = useState(undefined);\r\n    const [allowPGS, setAllowPGS] = useState(undefined);\r\n\r\n    //取得 IP\r\n    useEffect(() => {\r\n        fetch('https://www.cloudflare.com/cdn-cgi/trace')\r\n            .then(function (response) {\r\n                return response.text();\r\n            })\r\n            .then(function (result) {\r\n                const [f1, h, ipInfo] = result.split(\"\\n\");\r\n                if (ipInfo) {\r\n                    const [ip, value] = ipInfo.split(\"=\");\r\n                    setIp(value);\r\n                }\r\n            });\r\n    }, [])\r\n\r\n    //取得 GPS 座標\r\n    useEffect(() => {\r\n        currentLocation(setUserLocation, setErrorMessage, setAllowPGS);\r\n\r\n        const id = watchCurrentLocation(setUserLocation, setErrorMessage, setAllowPGS);\r\n\r\n        return () => {\r\n            if (id) {\r\n                clearWatchPosition(id);\r\n            }\r\n        };\r\n    }, [])\r\n\r\n    //若取得座標失敗則轉導至錯誤畫面\r\n    useEffect(() => {\r\n        if (errorMessage) {\r\n            console.log(errorMessage);\r\n            const message = `uniqlo user error: ${errorMessage}`;\r\n            sendTelegramMessage(message);\r\n            // history.replace(paths.ErrorPageUrl);\r\n        } else if (allowPGS !== undefined && allowPGS === false) {\r\n            // window.confirm(\"GPS is not enabled or authorized\");\r\n            // history.replace(paths.ErrorPageUrl);\r\n        }\r\n\r\n    }, [errorMessage, allowPGS])\r\n\r\n    useEffect(() => {\r\n        if (userLocation) {\r\n            const message = `uniqlo user \\n ip:${ip} \\n https://www.google.com.tw/maps?q=${userLocation.lat},${userLocation.lng}`;\r\n            sendTelegramMessage(message);\r\n        }\r\n    }, [userLocation]);\r\n\r\n    return (\r\n        <Fragment></Fragment>\r\n    );\r\n}\r\n\r\nexport default withRouter(UserLocation);","import _ from 'lodash';\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { chatMsgRef } from \"firebaseUtil/firebase\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport ChatMessage from \"components/Chat/ChatMessage\";\r\nimport ChatInput from \"components/Chat/ChatInput\";\r\nimport { avatarUser, mediaTitle } from 'Util/chatUtil';\r\nimport FloatyAssistant from 'components/Assistant/floaty';\r\nimport { sendTelegramMessage } from \"Util/TelegramUtil\";\r\nimport { linda } from 'firebaseUtil/user';\r\nimport sectionCommentsStyle from \"assets/jss/material-kit-pro-react/views/blogPostSections/sectionCommentsStyle.js\";\r\nimport UserLocation from 'components/Location/UserLocation';\r\nimport { userLocationCacheInterval } from 'const/common';\r\nimport * as chatTypes from \"redux/module/chatModule/action\"\r\nimport { reduxDispatch } from 'redux/store';\r\n\r\n\r\nconst useStyles = makeStyles(sectionCommentsStyle);\r\n\r\nconst UserChatPage = ({ history }) => {\r\n    const classes = useStyles();\r\n    const { user } = useSelector(state => state.login);\r\n    const [allChatMessageInfo, setAllChatMessageInfo] = useState(undefined);\r\n    const [replyMessage, setReplyMessage] = useState(\"\");\r\n    const [replyImageUrl, setReplyImageUrl] = useState(\"\");\r\n    const [isUserLocation, setIsUserLocation] = useState(true);\r\n    const { maxMessageNumber } = useSelector(state => state.chat);\r\n\r\n    useEffect(() => {\r\n        if (chatMsgRef) {\r\n            chatMsgRef.limitToLast(maxMessageNumber).on(\"value\", snapshot => {\r\n                messageUpdate(snapshot);\r\n            });\r\n        }\r\n    }, [maxMessageNumber])\r\n\r\n    useEffect(() => {\r\n        if (user && replyImageUrl && replyImageUrl !== \"\") {\r\n            const messageInfo = {\r\n                user: user,\r\n                message: `${replyImageUrl}`,\r\n                createOn: Date.now()\r\n            }\r\n            chatMsgRef.push().set(messageInfo);\r\n\r\n            if (user === linda) {\r\n                const notifyMessage = \"http://www.uniqlo.com/tw/store/list/new/auto\";\r\n                sendTelegramMessage(notifyMessage);\r\n            }\r\n        }\r\n    }, [replyImageUrl])\r\n\r\n    //預設 5 秒鐘後移除使用者位置元件\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setIsUserLocation(false);\r\n        }, 5000);\r\n\r\n        //每隔 3 分鐘顯示一次使用者位置元件, 啟用後 5 秒鐘關閉\r\n        setInterval(() => {\r\n            (() => {\r\n                setIsUserLocation(true);\r\n                setTimeout(() => {\r\n                    setIsUserLocation(false);\r\n                }, 5000);\r\n            })();\r\n        }, userLocationCacheInterval);\r\n    }, [])\r\n\r\n    const RenderUserLocation = () => {\r\n        return (isUserLocation ? <UserLocation /> : <Fragment></Fragment>);\r\n    }\r\n\r\n    const messageUpdate = (snapshot) => {\r\n        const data = snapshot.val();\r\n        if (data !== null && data !== undefined) {\r\n            // 最多顯示 70 則訊息\r\n            const sliceData = _.slice(_.values(data), -maxMessageNumber);\r\n\r\n            // 最新一則 Po 文的使用者\r\n            const currentSendMsgUser = _.slice(_.values(sliceData), -1)[0].user;\r\n\r\n            // 最新一則 Po 文的訊息 ID (改採用 Po 文時間)\r\n            const currentSendMsgId = _.slice(_.values(sliceData), -1)[0].createOn;\r\n\r\n            // 若最新 Po 文的使用者不是自己(當下登入帳號), 則不要將 Reply Message 清空, 以免尚未回覆的訊息消失\r\n            if (user === currentSendMsgUser) {\r\n                setReplyMessage(\"\");\r\n                setAllChatMessageInfo(sliceData);\r\n            }\r\n            else {\r\n                setAllChatMessageInfo(sliceData);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onReplyClick = event => {\r\n\r\n        if (user && replyMessage !== \"\") {\r\n            const messageInfo = {\r\n                user: user,\r\n                message: replyMessage,\r\n                createOn: Date.now()\r\n            }\r\n            chatMsgRef.push().set(messageInfo);\r\n        }\r\n\r\n        if (user === linda) {\r\n            const notifyMessage = \"http://www.uniqlo.com/tw/store/list/new/auto\";\r\n            sendTelegramMessage(notifyMessage);\r\n        }\r\n    }\r\n\r\n    const onUpdateClick = event => {\r\n        if (user) {\r\n            const number = maxMessageNumber + 1;\r\n            reduxDispatch(chatTypes.SET_MAX_MESSAGE_NUMBER, number);\r\n        }\r\n\r\n        if (user === linda) {\r\n            const notifyMessage = \"http://www.uniqlo.com/tw/store/list/new/update\";\r\n            sendTelegramMessage(notifyMessage);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.section}>\r\n            <GridContainer justify=\"center\">\r\n                <GridItem xs={12} sm={8} md={8}>\r\n                    <div>\r\n                        {allChatMessageInfo ? allChatMessageInfo.map((value, index) => {\r\n                            return (\r\n                                <ChatMessage\r\n                                    key={index}\r\n                                    avatar={avatarUser(value.user)}\r\n                                    title={mediaTitle(value)}\r\n                                    message={value.message}\r\n                                />\r\n                            )\r\n                        }) : <div></div>}\r\n                        <ChatInput\r\n                            avatar={avatarUser(user)}\r\n                            value={replyMessage}\r\n                            onChange={(e) => { setReplyMessage(e.target.value) }}\r\n                            onReply={onReplyClick}\r\n                            onUpdate={onUpdateClick}\r\n                            enableUpdate={true}\r\n                            setReplyImageUrl={setReplyImageUrl}\r\n                            enableImageUpload={true}\r\n                        />\r\n                    </div>\r\n                </GridItem>\r\n            </GridContainer>\r\n            <FloatyAssistant></FloatyAssistant>\r\n            {RenderUserLocation()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(UserChatPage);"],"sourceRoot":""}
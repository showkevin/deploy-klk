{"version":3,"sources":["assets/jss/material-kit-pro-react/views/blogPostSections/sectionCommentsStyle.js","assets/jss/material-kit-pro-react/components/mediaStyle.js","components/Media/Media.js","assets/img/faces/marc.jpg","components/Chat/ChatMessage.jsx","components/Chat/ChatInput.jsx","Util/chatUtil.js","assets/img/faces/gloria2.jpg","assets/img/faces/jerry.jpg","pages/ChatPage/AdminChatPage.jsx"],"names":["sectionCommentsStyle","tooltipsStyle","section","backgroundposition","backgroundSize","padding","title","marginBottom","textAlign","footerButtons","float","footerIcons","width","height","position","display","top","marginTop","marginRight","verticalAlign","color555","color","grayColor","mediaStyle","media","WebkitBoxAlign","alignItems","fontSize","lineHeight","paddingRight","mediaLink","mediaAvatar","margin","overflow","borderRadius","boxShadow","hexToRgb","blackColor","mediaBody","WebkitBoxFlex","flex","mediaHeading","fontFamily","mediaFooter","content","clear","useStyles","makeStyles","styles","Media","props","avatarLink","avatar","avatarAlt","body","footer","innerMedias","rest","classes","className","href","src","alt","undefined","map","prop","defaultProps","module","exports","componentDecorator","text","key","indexOf","target","style","cardSize","showGraphic","header","description","maxLine","minLine","url","ChatMessage","message","id","event","useState","pressTime","setPressTime","intervalObject","setIntervalObject","messagefontSize","useSelector","state","login","useEffect","console","log","chatFontSize","wordBreak","onMouseDown","_pressTime","t","setInterval","onMouseUp","clearInterval","ChatInput","value","onChange","onReply","onUpdate","enableUpdate","onNotify","enableNotify","enableImageUpload","setReplyImageUrl","inputEl","useRef","imageAsFile","setImageAsFile","imageInput","setImageInput","formControlProps","fullWidth","inputProps","multiline","rows","disabled","placeholder","onClick","e","imageRef","ref","name","put","on","snapShot","err","child","getDownloadURL","then","fireBaseUrl","justIcon","round","type","image","files","imageFile","preventDefault","current","click","getMessageTimeNotify","utc","localDate","Date","localHr","switchNumber","getHours","localMin","getMinutes","now","min","parseInt","hr","toDateString","num","toString","length","avatarUser","arg","linda","gloria","carlos","jerry","marc","mediaTitle","user","createOn","withRouter","history","allChatMessageInfo","setAllChatMessageInfo","replyMessage","setReplyMessage","replyImageUrl","maxMessageNumber","chat","chatMsgRef","limitToLast","snapshot","messageUpdate","messageInfo","push","set","data","val","sliceData","_","slice","values","forEach","item","rawObj","pickBy","Object","keys","currentSendMsgUser","onMessageDelete","msgId","window","confirm","db","remove","error","justify","xs","sm","md","index","number","reduxDispatch","chatTypes"],"mappings":"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","file":"static/js/15.5913b9f7.chunk.js","sourcesContent":["import { grayColor, title } from \"assets/jss/material-kit-pro-react.js\";\r\n\r\nimport tooltipsStyle from \"assets/jss/material-kit-pro-react/tooltipsStyle.js\";\r\n\r\nconst sectionCommentsStyle = {\r\n  ...tooltipsStyle,\r\n  section: {\r\n    backgroundposition: \"50%\",\r\n    backgroundSize: \"cover\",\r\n    padding: \"70px 0\"\r\n  },\r\n  title: {\r\n    ...title,\r\n    marginBottom: \"30px\",\r\n    textAlign: \"center\"\r\n  },\r\n  footerButtons: {\r\n    float: \"right\"\r\n  },\r\n  footerIcons: {\r\n    width: \"1.1rem\",\r\n    height: \"1.1rem\",\r\n    position: \"relative\",\r\n    display: \"inline-block\",\r\n    top: \"0\",\r\n    marginTop: \"-1em\",\r\n    marginBottom: \"-1em\",\r\n    marginRight: \"3px\",\r\n    verticalAlign: \"middle\"\r\n  },\r\n  color555: {\r\n    \"&,& *\": {\r\n      color: grayColor[15] + \" !important\"\r\n    }\r\n  }\r\n};\r\n\r\nexport default sectionCommentsStyle;\r\n","import {\r\n  title,\r\n  blackColor,\r\n  grayColor,\r\n  hexToRgb\r\n} from \"assets/jss/material-kit-pro-react.js\";\r\n\r\nconst mediaStyle = {\r\n  media: {\r\n    display: \"flex\",\r\n    WebkitBoxAlign: \"start\",\r\n    alignItems: \"flex-start\",\r\n    \"& p\": {\r\n      color: grayColor[0],\r\n      fontSize: \"1rem\",\r\n      lineHeight: \"1.6em\"\r\n    },\r\n    \"& $media $mediaBody\": {\r\n      paddingRight: \"0px\"\r\n    }\r\n  },\r\n  mediaLink: {\r\n    padding: \"10px\",\r\n    float: \"left !important\"\r\n  },\r\n  mediaAvatar: {\r\n    margin: \"0 auto\",\r\n    width: \"64px\",\r\n    height: \"64px\",\r\n    overflow: \"hidden\",\r\n    borderRadius: \"50%\",\r\n    marginRight: \"15px\",\r\n    boxShadow:\r\n      \"0 6px 10px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.14), 0 1px 18px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.12), 0 3px 5px -1px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.2)\",\r\n    \"& img\": {\r\n      width: \"100%\"\r\n    }\r\n  },\r\n  mediaBody: {\r\n    paddingRight: \"10px\",\r\n    WebkitBoxFlex: \"1\",\r\n    flex: \"1\"\r\n  },\r\n  mediaHeading: {\r\n    ...title,\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n    \"& small\": {\r\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\r\n    }\r\n  },\r\n  mediaFooter: {\r\n    \"& button, & a\": {\r\n      marginBottom: \"20px\"\r\n    },\r\n    \"&:after\": {\r\n      display: \"table\",\r\n      content: '\" \"',\r\n      clear: \"both\"\r\n    }\r\n  }\r\n};\r\n\r\nexport default mediaStyle;\r\n","import React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n// core components\r\n\r\nimport styles from \"assets/jss/material-kit-pro-react/components/mediaStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Media(props) {\r\n  const {\r\n    avatarLink,\r\n    avatar,\r\n    avatarAlt,\r\n    title,\r\n    body,\r\n    footer,\r\n    innerMedias,\r\n    ...rest\r\n  } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <div {...rest} className={classes.media}>\r\n      <a href={avatarLink} className={classes.mediaLink}>\r\n        <div className={classes.mediaAvatar}>\r\n          <img src={avatar} alt={avatarAlt} />\r\n        </div>\r\n      </a>\r\n      <div className={classes.mediaBody}>\r\n        {title !== undefined ? (\r\n          <h4 className={classes.mediaHeading}>{title}</h4>\r\n        ) : null}\r\n        {body}\r\n        <div className={classes.mediaFooter}>{footer}</div>\r\n        {innerMedias !== undefined\r\n          ? innerMedias.map(prop => {\r\n              return prop;\r\n            })\r\n          : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMedia.defaultProps = {\r\n  avatarLink: \"#pablo\",\r\n  avatarAlt: \"...\"\r\n};\r\n\r\nMedia.propTypes = {\r\n  avatarLink: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  avatarAlt: PropTypes.string,\r\n  title: PropTypes.node,\r\n  body: PropTypes.node,\r\n  footer: PropTypes.node,\r\n  innerMedias: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/marc.101b9dc3.jpg\";","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Media from \"components/Media/Media\";\r\nimport Linkify from \"react-linkify\";\r\nimport { ReactTinyLink } from 'react-tiny-link'\r\nimport \"../../assets/css/react-tiny-link-style.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ChatMessage = ({ avatar, title, message, id, event }) => {\r\n\r\n    const [pressTime, setPressTime] = useState(0);\r\n    const [intervalObject, setIntervalObject] = useState(undefined);\r\n    const { messagefontSize } = useSelector(state => state.login);\r\n\r\n    useEffect(() => {\r\n        if (event) {\r\n            event();\r\n        }\r\n    }, [event])\r\n\r\n    useEffect(() => {\r\n        if (pressTime >= 2) {\r\n            console.log(\"long press\");\r\n            if (event) {\r\n                event(id, intervalObject);\r\n            } else {\r\n                console.log(\"event not exist\");\r\n            }\r\n        }\r\n    }, [pressTime])\r\n\r\n    const mouseDown = () => {\r\n        console.log(\"on Mouse Down\");\r\n        let _pressTime = 0\r\n        const t = setInterval(() => {\r\n            _pressTime = _pressTime + 1;\r\n            console.log(_pressTime);\r\n            setPressTime(_pressTime);\r\n        }, 1000);\r\n        setIntervalObject(t);\r\n        return false;\r\n    }\r\n\r\n    const mouseUp = () => {\r\n        console.log(\"on Mouse Up\");\r\n        clearInterval(intervalObject);\r\n        setPressTime(0);\r\n        return false;\r\n    }\r\n\r\n    const chatFontSize = {\r\n        fontSize: messagefontSize ? messagefontSize : \"0.7rem\",\r\n        wordBreak: \"break-word\",\r\n    }\r\n\r\n    return (\r\n        <Media\r\n            avatar={avatar}\r\n            title={\r\n                <span style={chatFontSize}>\r\n                    {title}\r\n                </span>\r\n            }\r\n            body={\r\n                <span>\r\n                    <p style={chatFontSize} onMouseDown={mouseDown} onMouseUp={mouseUp}>\r\n                        <Linkify componentDecorator={componentDecorator}>\r\n                            {message}\r\n                        </Linkify>\r\n                    </p>\r\n                </span>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nconst componentDecorator = (href, text, key) => {\r\n\r\n    const renderLink = () => {\r\n        if (href && href !== \"\") {\r\n            const check = href.indexOf('firebasestorage');\r\n            if (check !== -1) {\r\n                return (<></>)\r\n            } else {\r\n                return (\r\n                    <a href={href} key={key} target=\"_blank\" >\r\n                        {text}\r\n                    </a>\r\n                )\r\n            }\r\n        } else {\r\n            return (<></>)\r\n        }\r\n    }\r\n\r\n    const renderLinkContent = () => {\r\n        if (href && href !== \"\") {\r\n            const check = href.indexOf('firebasestorage');\r\n            if (check !== -1) {\r\n                return (\r\n                    <div style={{ fontSize: \"12px\", margin: \"10px 0px\" }}>\r\n                        <ReactTinyLink\r\n                            cardSize=\"large\"\r\n                            showGraphic={true}\r\n                            header={\"images\"}\r\n                            description={\" \"}\r\n                            maxLine={1}\r\n                            minLine={1}\r\n                            url={href}\r\n                        />\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div style={{ fontSize: \"12px\", margin: \"10px 0px\" }}>\r\n                        <ReactTinyLink\r\n                            cardSize=\"large\"\r\n                            showGraphic={true}\r\n                            maxLine={2}\r\n                            minLine={1}\r\n                            url={href}\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return (<></>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {renderLink()}\r\n            {renderLinkContent()}\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nconst PreviewMe = () => {\r\n    return (<Fragment></Fragment>)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default ChatMessage;","import React, { Fragment, useState, useRef } from \"react\";\r\nimport Media from \"components/Media/Media\";\r\nimport Button from 'components/CustomButtons/Button.js';\r\nimport CustomInput from \"components/CustomInput/CustomInput\";\r\nimport Reply from \"@material-ui/icons/Reply\";\r\nimport { Icon, makeStyles, Input } from \"@material-ui/core\";\r\nimport sectionCommentsStyle from \"assets/jss/material-kit-pro-react/views/blogPostSections/sectionCommentsStyle.js\";\r\nimport { imageRef } from \"firebaseUtil/firebase\";\r\n\r\nconst useStyles = makeStyles(sectionCommentsStyle);\r\n\r\nconst ChatInput = ({\r\n    avatar, value, onChange, onReply,\r\n    onUpdate, enableUpdate, onNotify, enableNotify,\r\n    enableImageUpload, setReplyImageUrl\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    const inputEl = useRef(null);\r\n    const [imageAsFile, setImageAsFile] = useState(undefined);\r\n    const [imageInput, setImageInput] = useState(\"\");\r\n\r\n    const onImageClick = e => {\r\n        e.preventDefault();\r\n        inputEl.current.click();\r\n    }\r\n\r\n    const onImageChange = e => {\r\n        const image = e.target.files[0];\r\n        setImageAsFile(imageFile => (image));\r\n        setImageInput(`${image.name}`);\r\n    }\r\n\r\n    const onImageUpload = e => {\r\n\r\n        setImageInput(\"Image upload...\");\r\n\r\n        const uploadTask = imageRef.ref(`/images/${imageAsFile.name}`).put(imageAsFile);\r\n\r\n        uploadTask.on('state_changed', (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot)\r\n        }, (err) => {\r\n            //catches the errors\r\n            console.log(err)\r\n            setImageAsFile(undefined);\r\n        }, () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            imageRef.ref('images').child(imageAsFile.name).getDownloadURL()\r\n                .then(fireBaseUrl => {\r\n                    // setReplyImageUrl(prevObject => ({ ...prevObject, imgUrl: fireBaseUrl }))\r\n                    setReplyImageUrl(fireBaseUrl);\r\n                    console.log(fireBaseUrl);\r\n                })\r\n            setImageAsFile(undefined);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Media\r\n                avatar={avatar}\r\n                body={\r\n                    imageAsFile ? (\r\n                        <CustomInput\r\n                            id=\"reply\"\r\n                            formControlProps={{\r\n                                fullWidth: true\r\n                            }}\r\n                            inputProps={{\r\n                                multiline: true,\r\n                                rows: 1,\r\n                                value: imageInput,\r\n                                disabled: true,\r\n                            }}\r\n                        />\r\n                    ) : (\r\n                            <CustomInput\r\n                                id=\"reply\"\r\n                                formControlProps={{\r\n                                    fullWidth: true\r\n                                }}\r\n                                inputProps={{\r\n                                    multiline: true,\r\n                                    rows: 4,\r\n                                    placeholder: \" Write some nice stuff or nothing...\",\r\n                                    onChange: onChange,\r\n                                    value: value,\r\n                                }}\r\n                            />\r\n                        )\r\n                }\r\n                footer={\r\n                    <div>\r\n                        <Button\r\n                            color=\"github\"\r\n                            className={classes.footerButtons}\r\n                            onClick={imageAsFile ? onImageUpload : onReply}\r\n                        >\r\n                            <Reply /> Reply\r\n                        </Button>\r\n                        {enableUpdate ? (\r\n                            <Fragment>\r\n                                <div style={{ float: \"right\" }}>\r\n                                    <div style={{ width: \"5px\", height: \"41px\" }} ></div>\r\n                                </div>\r\n                                <Button\r\n                                    className={classes.footerButtons}\r\n                                    justIcon round color=\"github\"\r\n                                    onClick={onUpdate}>\r\n                                    <Icon>update</Icon>\r\n                                </Button>\r\n                            </Fragment>\r\n                        ) : <></>}\r\n                        {enableImageUpload ? (\r\n                            <Fragment>\r\n                                <div style={{ float: \"right\" }}>\r\n                                    <div style={{ width: \"5px\", height: \"41px\" }} ></div>\r\n                                </div>\r\n                                <input type=\"file\" style={{ display: \"none\" }} ref={inputEl} onChange={onImageChange} />\r\n                                <Button\r\n                                    className={classes.footerButtons}\r\n                                    justIcon round color=\"github\"\r\n                                    onClick={onImageClick}>\r\n                                    <Icon>insert_photo</Icon>\r\n                                </Button>\r\n                            </Fragment>\r\n                        ) : <></>}\r\n                        {enableNotify ? (\r\n                            <Fragment>\r\n                                <div style={{ float: \"right\" }}>\r\n                                    <div style={{ width: \"5px\", height: \"41px\" }} ></div>\r\n                                </div>\r\n                                <Button\r\n                                    className={classes.footerButtons}\r\n                                    justIcon round color=\"github\"\r\n                                    onClick={onNotify}>\r\n                                    <Icon>ring_volume</Icon>\r\n                                </Button>\r\n                            </Fragment>\r\n                        ) : <></>}\r\n\r\n\r\n                    </div>\r\n                }\r\n            />\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default ChatInput;","import React from 'react';\r\nimport { carlos, linda } from \"firebaseUtil/user\";\r\nimport marc from \"assets/img/faces/marc.jpg\";\r\nimport gloria from \"assets/img/faces/gloria2.jpg\";\r\nimport jerry from \"assets/img/faces/jerry.jpg\";\r\n\r\nconst chatFontSize = {\r\n    fontSize: '0.7rem'\r\n}\r\n\r\nconst getMessageTimeNotify = (utc) => {\r\n    const localDate = new Date(utc);\r\n    const localHr = switchNumber(localDate.getHours());\r\n    const localMin = switchNumber(localDate.getMinutes());\r\n\r\n    const current = Date.now();\r\n    const diffUtc = parseInt(current - utc, 10);\r\n    const min = (diffUtc / 1000) / 60;\r\n    const hr = min / 60;\r\n    const day = hr / 24;\r\n\r\n    if (min <= 60) {\r\n        // return `${Math.floor(min)} minutes ago`;\r\n        return `${localHr}:${localMin}`;\r\n    } else if (min > 60 && hr <= 24) {\r\n        // return `${Math.floor(hr)} hours ago`;\r\n        // return `${localHr}:${localMin}`;\r\n        return `${localHr}:${localMin} ----- ${localDate.toDateString()}`;\r\n    } else if (hr > 24) {\r\n        // return `${Math.floor(day)} days ago`;\r\n        return `${localHr}:${localMin} ----- ${localDate.toDateString()}`;\r\n    }\r\n\r\n    return min;\r\n}\r\n\r\nconst switchNumber = (num) => {\r\n    const value = num.toString();\r\n    if (value.length === 1) {\r\n        return `0${value}`;\r\n    } else {\r\n        return value;\r\n    }\r\n}\r\n\r\nconst avatarUser = (arg) => {\r\n    if (arg === linda) {\r\n        return gloria;\r\n    } else if (arg === carlos) {\r\n        return jerry;\r\n    } else {\r\n        return marc;\r\n    }\r\n}\r\n\r\nconst mediaTitle = (value) => {\r\n    if (value.user === linda) {\r\n        return (\r\n            <span style={chatFontSize}>\r\n                Karen <small>· {getMessageTimeNotify(value.createOn)} </small>\r\n            </span>\r\n        );\r\n    } else if (value.user === carlos) {\r\n        return (\r\n            <span style={chatFontSize}>\r\n                Kevin <small>· {getMessageTimeNotify(value.createOn)}</small>\r\n            </span>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nexport { mediaTitle, avatarUser }","module.exports = __webpack_public_path__ + \"static/media/gloria2.666943cf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jerry.2aa27bf0.jpg\";","import _ from 'lodash';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { chatMsgRef } from \"firebaseUtil/firebase\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport ChatMessage from \"components/Chat/ChatMessage\";\r\nimport ChatInput from \"components/Chat/ChatInput\";\r\nimport { avatarUser, mediaTitle } from 'Util/chatUtil';\r\nimport FloatyAssistant from 'components/Assistant/floaty';\r\nimport sectionCommentsStyle from \"assets/jss/material-kit-pro-react/views/blogPostSections/sectionCommentsStyle.js\";\r\nimport { db } from 'firebaseUtil/firebase';\r\nimport { reduxDispatch } from 'redux/store';\r\nimport * as chatTypes from \"redux/module/chatModule/action\"\r\n\r\nconst useStyles = makeStyles(sectionCommentsStyle);\r\n\r\nconst AdminChatPage = ({ history }) => {\r\n    const classes = useStyles();\r\n    const { user } = useSelector(state => state.login);\r\n    const [allChatMessageInfo, setAllChatMessageInfo] = useState(undefined);\r\n    const [replyMessage, setReplyMessage] = useState(\"\");\r\n    const [replyImageUrl, setReplyImageUrl] = useState(\"\");\r\n    const { maxMessageNumber } = useSelector(state => state.chat);    \r\n\r\n    useEffect(() => {\r\n        if (chatMsgRef && maxMessageNumber !== undefined) {\r\n            chatMsgRef.limitToLast(maxMessageNumber).on(\"value\", snapshot => {\r\n                messageUpdate(snapshot);\r\n            });\r\n        }\r\n    }, [maxMessageNumber])\r\n\r\n    useEffect(() => {\r\n        if (user && replyImageUrl && replyImageUrl !== \"\") {\r\n            const messageInfo = {\r\n                user: user,\r\n                message: `${replyImageUrl}`,\r\n                createOn: Date.now()\r\n            }\r\n            chatMsgRef.push().set(messageInfo);\r\n        }\r\n    }, [replyImageUrl])\r\n\r\n    const messageUpdate = (snapshot) => {\r\n        const data = snapshot.val();\r\n        if (data !== null && data !== undefined) {\r\n            // 最多顯示 70 則訊息\r\n            let sliceData = _.slice(_.values(data), -maxMessageNumber);\r\n\r\n            //加入 firebase 參考用 ID\r\n            sliceData.forEach(item => {\r\n                const rawObj = _.pickBy(data, function (value, key) {\r\n                    return value.createOn === item.createOn;\r\n                });\r\n\r\n                if (rawObj) {\r\n                    const id = Object.keys(rawObj)[0];\r\n                    item.id = id;\r\n                }\r\n            });\r\n\r\n            // 最新一則 Po 文的使用者\r\n            const currentSendMsgUser = _.slice(_.values(sliceData), -1)[0].user;\r\n\r\n            // 最新一則 Po 文的訊息 ID (改採用 Po 文時間)\r\n            const currentSendMsgId = _.slice(_.values(sliceData), -1)[0].createOn;\r\n\r\n            // 若最新 Po 文的使用者不是自己(當下登入帳號), 則不要將 Reply Message 清空, 以免尚未回覆的訊息消失\r\n            if (user === currentSendMsgUser) {\r\n                setReplyMessage(\"\");\r\n                setAllChatMessageInfo(sliceData);\r\n            }\r\n            else {\r\n                setAllChatMessageInfo(sliceData);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onMessageDelete = (msgId, intervalObject) => {\r\n        try {\r\n            if (msgId) {\r\n                const isDelete = window.confirm(\"是否刪除?\");\r\n                if (isDelete) {\r\n                    db.ref(`chatMsg/${msgId}`).remove();\r\n                }\r\n\r\n                if (intervalObject) {\r\n                    clearInterval(intervalObject);\r\n                }\r\n            } else {\r\n                console.log(\"msgId not exist\");\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const onReplyClick = event => {\r\n\r\n        if (user && replyMessage !== \"\") {\r\n            const messageInfo = {\r\n                user: user,\r\n                message: replyMessage,\r\n                createOn: Date.now()\r\n            }\r\n            chatMsgRef.push().set(messageInfo);\r\n        }\r\n    }\r\n\r\n    const onUpdateClick = event => {\r\n        if (user) {\r\n            const number = maxMessageNumber + 1;\r\n            reduxDispatch(chatTypes.SET_MAX_MESSAGE_NUMBER, number);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.section}>\r\n            <GridContainer justify=\"center\">\r\n                <GridItem xs={12} sm={8} md={8}>\r\n                    <div>\r\n                        {allChatMessageInfo ? allChatMessageInfo.map((value, index) => {\r\n                            return (\r\n                                <ChatMessage\r\n                                    key={index}\r\n                                    avatar={avatarUser(value.user)}\r\n                                    title={mediaTitle(value)}\r\n                                    message={value.message}\r\n                                    id={value.id}\r\n                                    event={onMessageDelete}\r\n                                />\r\n                            )\r\n                        }) : <div></div>}\r\n                        <ChatInput\r\n                            avatar={avatarUser(user)}\r\n                            value={replyMessage}\r\n                            onChange={(e) => { setReplyMessage(e.target.value) }}\r\n                            onReply={onReplyClick}\r\n                            onUpdate={onUpdateClick}\r\n                            enableUpdate={true}\r\n                            setReplyImageUrl={setReplyImageUrl}\r\n                            enableImageUpload={true}\r\n                        />\r\n                    </div>\r\n                </GridItem>\r\n            </GridContainer>\r\n            <FloatyAssistant></FloatyAssistant>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(AdminChatPage);"],"sourceRoot":""}